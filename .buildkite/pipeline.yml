steps:
  - label: "Julia 1 (NonlinearSolve)"
    plugins:
      - JuliaCI/julia#v1:
          version: "1"
      - JuliaCI/julia-coverage#v1:
          codecov: true
          dirs:
            - src
            - ext
    command: |
      julia --color=yes --code-coverage=user --depwarn=yes --project=. -e '
        import Pkg;
        Pkg.Registry.update();
        # Install packages present in subdirectories
        dev_pks = Pkg.PackageSpec[];
        for path in ("lib/SciMLJacobianOperators", "lib/BracketingNonlinearSolve", "lib/NonlinearSolveBase", "lib/SimpleNonlinearSolve", "lib/NonlinearSolveFirstOrder", "lib/NonlinearSolveSpectralMethods", "lib/NonlinearSolveQuasiNewton")
          push!(dev_pks, Pkg.PackageSpec(; path));
        end
        Pkg.develop(dev_pks);
        Pkg.instantiate();
        Pkg.test(; coverage="user")'
    agents:
      queue: "juliagpu"
      cuda: "*"
    timeout_in_minutes: 60
    # Don't run Buildkite if the commit message includes the text [skip tests]
    if: build.message !~ /\[skip tests\]/

  - label: "Julia 1 (SimpleNonlinearSolve)"
    plugins:
      - JuliaCI/julia#v1:
          version: "1"
      - JuliaCI/julia-coverage#v1:
          codecov: true
          dirs:
            - src
            - ext
    command: |
      julia --color=yes --code-coverage=user --depwarn=yes --project=lib/SimpleNonlinearSolve -e '
        import Pkg;
        Pkg.Registry.update();
        # Install packages present in subdirectories
        dev_pks = Pkg.PackageSpec[];
        for path in ("lib/NonlinearSolveBase", "lib/BracketingNonlinearSolve", "lib/SciMLJacobianOperators")
          push!(dev_pks, Pkg.PackageSpec(; path))
        end
        Pkg.develop(dev_pks);
        Pkg.instantiate();
        Pkg.test(; coverage="user")'
    agents:
      queue: "juliagpu"
      cuda: "*"
    timeout_in_minutes: 60
    # Don't run Buildkite if the commit message includes the text [skip tests]
    if: build.message !~ /\[skip tests\]/

env:
  GROUP: CUDA
  JULIA_PKG_SERVER: "" # it often struggles with our large artifacts
  SECRET_CODECOV_TOKEN: "HC7K/ymhi62KUQ5OLU4DOl+11gaQt4JhXX/2nfTGlTsBB8mEMxQ8R+sHIp/2HjEup5eSXAN2IWQDQ7RDBuQvVp0T1UVtr2e4YNZFztKnsJXrFO15hXxYShJodI//X/8DzhlQd/lyTDOAOJu3eznsc3sC2CUgJzXZxLUtQN9YaZ1i3a+NoN1mO5UpkkHVhXigwF5gjy+0tei8fCdcP+SIhG0EanS5yd9q/SurtCpMHsHyUG97+ZVPglSKgdaqr31+PdmiPJ+ynp4+Hnc/esosxUSHSIL+ryRTO+28RNwPTiNf99J51RJLQmz1knWTR1ky6tiYIZ5218O6wvNil0SqNw==;U2FsdGVkX18nBY3t4LZYlEIz3EVKjpqCd994JNeJGt006up+sAjXEssI0tgCVXnfXsenVsP3NCCEoOS1GXc44g=="
